<% unless errors.empty? %>
<div class="errors">
  <%= errors %>
</div>
<% end %>

<%#= link_to_function "Add Skill", "Element.toggle('new_skill')" %>

<div id="new_skill" style="display: none;">
  <% instance_variable_set "@user_skill", UserSkill.new(:level => 0, :user_id => user.id)%>

  <% form_remote_for(:user_skill, @user_skill, :url => user_skills_path, :update => "skills_container", :html => {:method => :post, :class => "new_user_skill", :id => "new_user_skill"}) do |f| %>
    <p>
      <%= render "/user_skills/form", :f => f, :user_skill => @user_skill %>
      <div id="autocomplete_skill_name" class="autocomplete"></div>
      <%= f.submit 'Add' %>
    </p>
  <% end %>
  
  <br/>
</div>

<%# OPTIMIZE: This is going to be REALLLLY SLOW at more than 100 Skills %>
<script type="text/javascript">
  new Autocompleter.Local($('new_user_skill').getInputs('text', 'user_skill[skill_name]').first(), 'autocomplete_skill_name', [ <%= Skill.all.reject{ |s| user.skills.include?(s) }.collect{ |s| "\"#{escape_javascript(s.name)}\"" }.join(",") %> ], {});
</script>
